{"version":3,"sources":["components/SearchBox.js","components/Nav.js","components/UserTable.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleSearchChange","className","type","placeholder","aria-label","onChange","Nav","useStyles","makeStyles","table","minWidth","BasicTable","users","handleSort","classes","formatDate","date","dateArray","split","year","join","undefined","name","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","onClick","TableBody","map","user","index","scope","src","picture","thumbnail","alt","first","last","registered","href","email","phone","login","uuid","App","useState","setUsers","filteredUsers","setFilteredUsers","order","setOrder","useEffect","axios","get","then","res","data","results","event","filter","target","value","filteredList","Object","values","toLowerCase","indexOf","console","log","sortedUsers","sort","a","b","localeCompare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkBeA,MAhBf,YAA4C,IAAvBC,EAAsB,EAAtBA,mBACnB,OACE,qBAAKC,UAAU,0CAAf,SACE,sBAAMA,UAAU,cAAhB,SACE,uBACEA,UAAU,eACVC,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAUL,SCYLM,MApBf,YAAsC,IAAvBN,EAAsB,EAAtBA,mBACb,OACE,qCACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,0CAAf,SACE,sBAAKA,UAAU,oCAAf,UACE,sBAAMA,UAAU,SAAhB,kCACA,uBACA,sBAAMA,UAAU,SAAhB,wGAON,cAAC,EAAD,CAAWD,mBAAoBA,Q,gECR/BO,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OAIC,SAASC,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WACpCC,EAAUP,IACVQ,EAAa,SAACC,GAClB,IAAMC,EAAYD,EAAKE,MAAM,KACvBC,EAAOF,EAAU,GAKvB,MADsB,CAHRA,EAAU,GACPA,EAAU,GAAGC,MAAM,KACf,GACcC,GAAMC,KAAK,MAIhD,OACE,qBAAKnB,UAAU,YAAf,cACgBoB,IAAbT,EAAM,SAAsCS,IAAlBT,EAAM,GAAGU,KAClC,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOzB,UAAWa,EAAQL,MAAOL,aAAW,eAA5C,UACE,cAACuB,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oBACA,cAACA,EAAA,EAAD,CACEC,MAAM,QACNC,QAAS,WACPlB,EAAWD,EAAMU,OAHrB,kBAQA,cAACO,EAAA,EAAD,CAAWC,MAAM,QAAjB,2BACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,+BAGJ,cAACE,EAAA,EAAD,UACGpB,EAAMqB,KAAI,SAACC,EAAMC,GAAP,OACT,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKY,MAAM,MAAhC,SACE,qBAAKC,IAAKH,EAAKI,QAAQC,UAAWC,IAAI,wBAExC,cAACX,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,8BACGI,EAAKZ,KAAKmB,MADb,IACqBP,EAAKZ,KAAKoB,UAGjC,cAACb,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,4BAAIf,EAAWmB,EAAKS,WAAW3B,UAEjC,cAACa,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,4BACE,mBAAGc,KAAM,UAAYV,EAAKW,MAA1B,SAAkCX,EAAKW,YAG3C,cAAChB,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,4BAAII,EAAKY,YAlBEZ,EAAKa,MAAMC,gBA0BlC,kE,qBCEOC,MAzEf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNtC,EADM,KACCuC,EADD,OAE6BD,mBAAS,IAFtC,mBAENE,EAFM,KAESC,EAFT,OAGaH,mBAAS,WAHtB,mBAGNI,EAHM,KAGCC,EAHD,KAiEb,OA5DAC,qBAAU,WACRC,IAAMC,IAAI,gDAAgDC,MAAK,SAACC,GAC9D,IAAMC,EAAOD,EAAIC,KAAKC,QACtBX,EAAS,YAAIU,IACbR,EAAiB,YAAIQ,SAEtB,IAuDD,sBAAK5D,UAAU,MAAf,UACE,cAAC,EAAD,CAAKD,mBAbkB,SAAC+D,GAC1B,IAAMC,EAASD,EAAME,OAAOC,MACtBC,EAAevD,EAAMoD,QAAO,SAAC9B,GAGjC,OAAiD,IADpCkC,OAAOC,OAAOnC,GAAMd,KAAK,IAAIkD,cAC5BC,QAAQP,EAAOM,kBAE/BjB,EAAiB,YAAIc,IACrBK,QAAQC,IAAI,iBAAkBrB,MAM5B,cAAC,EAAD,CAAWxC,MAAOwC,EAAevC,WAvDlB,SAACS,GAEhBiC,EADY,YAAVD,EACO,SAEA,WAGX,IA8BMoB,EAActB,EAAcuB,MA9Bf,SAACC,EAAGC,GACrB,MAAc,WAAVvB,OAEcjC,IAAZuD,EAAEtD,GACG,OACcD,IAAZwD,EAAEvD,IACH,EAIQ,SAATA,EACAsD,EAAEtD,GAAMmB,MAAMqC,cAAcD,EAAEvD,GAAMmB,OAEpCmC,EAAEtD,GAAQuD,EAAEvD,QAILD,IAAZuD,EAAEtD,GACG,OACcD,IAAZwD,EAAEvD,IACH,EAGQ,SAATA,EACAuD,EAAEvD,GAAMmB,MAAMqC,cAAcF,EAAEtD,GAAMmB,OAEpCoC,EAAEvD,GAAQsD,EAAEtD,MAKzB+B,EAAiB,YAAIqB,WC7CVK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.502632c0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SearchBox({ handleSearchChange }) {\n  return (\n    <div className=\"searchbox d-flex justify-content-center\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={handleSearchChange}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","import React from \"react\";\nimport SearchBox from \"./SearchBox\";\n\nfunction Nav({ handleSearchChange }) {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <div className=\"container d-flex justify-content-center\">\n          <div className=\"navbar-brand ms-auto fas fa-users\">\n            <span className=\"navemp\"> Employee Directory </span>\n            <br></br>\n            <span className=\"navsub\">\n              Click on carrots to filter by heading or use the search box to\n              narrow your results.\n            </span>\n          </div>\n        </div>\n      </nav>\n      <SearchBox handleSearchChange={handleSearchChange} />\n    </>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function BasicTable({ users, handleSort }) {\n  const classes = useStyles();\n  const formatDate = (date) => {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  };\n\n  return (\n    <div className=\"container\">\n      {users[0] !== undefined && users[0].name !== undefined ? (\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Image</TableCell>\n                <TableCell\n                  align=\"right\"\n                  onClick={() => {\n                    handleSort(users.name);\n                  }}\n                >\n                  Name\n                </TableCell>\n                <TableCell align=\"right\">Date of Birth</TableCell>\n                <TableCell align=\"right\">Email</TableCell>\n                <TableCell align=\"right\">Phone Number</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users.map((user, index) => (\n                <TableRow key={user.login.uuid}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img src={user.picture.thumbnail} alt=\"employee portrait\" />\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <p>\n                      {user.name.first} {user.name.last}\n                    </p>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <p>{formatDate(user.registered.date)}</p>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <p>\n                      <a href={\"mailto:\" + user.email}>{user.email}</a>\n                    </p>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <p>{user.phone}</p>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      ) : (\n        <>Please try another user.</>\n      )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Nav from \"./components/Nav\";\nimport UserTable from \"./components/UserTable\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [order, setOrder] = useState(\"descend\");\n\n  useEffect(() => {\n    axios.get(\"https://randomuser.me/api/?results=50&nat=us\").then((res) => {\n      const data = res.data.results;\n      setUsers([...data]);\n      setFilteredUsers([...data]);\n    });\n  }, []);\n\n  const handleSort = (name) => {\n    if (order === \"descend\") {\n      setOrder(\"ascend\");\n    } else {\n      setOrder(\"descend\");\n    }\n\n    const compareFnc = (a, b) => {\n      if (order === \"ascend\") {\n        // account for missing values\n        if (a[name] === undefined) {\n          return 1;\n        } else if (b[name] === undefined) {\n          return -1;\n        }\n\n        // numerically\n        else if (name === \"name\") {\n          return a[name].first.localeCompare(b[name].first);\n        } else {\n          return a[name] - b[name];\n        }\n      } else {\n        // account for missing values\n        if (a[name] === undefined) {\n          return 1;\n        } else if (b[name] === undefined) {\n          return -1;\n        }\n        // numerically\n        else if (name === \"name\") {\n          return b[name].first.localeCompare(a[name].first);\n        } else {\n          return b[name] - a[name];\n        }\n      }\n    };\n    const sortedUsers = filteredUsers.sort(compareFnc);\n    setFilteredUsers([...sortedUsers]);\n  };\n\n  const handleSearchChange = (event) => {\n    const filter = event.target.value;\n    const filteredList = users.filter((user) => {\n      // merge data together, then see if user input is anywhere inside\n      let values = Object.values(user).join(\"\").toLowerCase();\n      return values.indexOf(filter.toLowerCase()) !== -1;\n    });\n    setFilteredUsers([...filteredList]);\n    console.log(\"filtered users\", filteredUsers);\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav handleSearchChange={handleSearchChange} />\n      <UserTable users={filteredUsers} handleSort={handleSort} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}